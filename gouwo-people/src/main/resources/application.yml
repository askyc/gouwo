server:
  port: 9001

spring:
  application:
    name: gouwo-people
  #  profiles:
  #    active: dev

  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:mysql://localhost:3306/gouwo?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai
    username: root
    password: root

  #RabbitMQ配置========================
  rabbitmq:
    host: localhost # rabbitmq的连接地址
    port: 5672 # rabbitmq的连接端口号
    virtual-host: /gouwo # rabbitmq的虚拟host
    username: gouwo # rabbitmq的用户名
    password: 123456 # rabbitmq的密码
    publisher-confirms: true #如果对异步消息需要回调必须设置为true

  #Redis配置========================
  redis:
    host: localhost # Redis服务器地址
    database: 0 # Redis数据库索引（默认为0）
    port: 6379 # Redis服务器连接端口
    password: # Redis服务器连接密码（默认为空）
    jedis:
      pool:
        max-active: 8 # 连接池最大连接数（使用负值表示没有限制）
        max-wait: -1ms # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-idle: 8 # 连接池中的最大空闲连接
        min-idle: 0 # 连接池中的最小空闲连接
    timeout: 3000ms # 连接超时时间（毫秒）

  # 自定义redis key
  #redis:
  #  key:
  #    prefix:
  #      authCode: "portal:authCode:"
  #    expire:
  #      authCode: 120 # 验证码超期时间

mybatis:
  mapper-locations:
    - classpath:mapper/*.xml
#mybatis-plus:
#  mapper-locations: classpath*:mapper/*

#JWT认证和授权配置========================
jwt:
  tokenHeader: Authorization #JWT存储的请求头
  secret: gouwo-secret #JWT加解密使用的密钥
  expiration: 604800 #JWT的超期限时间(60*60*24)
  tokenHead: Asky  #JWT负载中拿到开头

#Feign的常用配置========================
feign:
  hystrix:
    enabled: true #在Feign中开启Hystrix熔断器支持
  compression:
    request:
      enabled: false #是否对请求进行GZIP压缩
      mime-types: text/xml,application/xml,application/json #指定压缩的请求数据类型
      min-request-size: 2048 #超过该大小的请求会被压缩
    response:
      enabled: false #是否对响应进行GZIP压缩
logging:
  level: #修改日志级别
    com.gouwo.service.FeignService: debug

#security 路径安全配置========================
secure:
  ignored:
    urls: #安全路径白名单
      - /swagger-ui.html
      - /swagger-resources/**
      - /swagger/**
      - /**/v2/api-docs
      - /**/*.js
      - /**/*.css
      - /**/*.png
      - /**/*.ico
      - /webjars/springfox-swagger-ui/**
      - /druid/**
      - /actuator/**
      - /sign/login
      - /sign/register

eureka:
  client:
    register-with-eureka: true #注册到Eureka的注册中心
    fetch-registry: true #获取注册实例列表
    service-url:
      defaultZone: http://localhost:8181/eureka/
    registry-fetch-interval-seconds: 10

